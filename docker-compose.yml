version: "3.9"

services:

  db:
    image: postgres:12
    command: -c shared_buffers=256MB -c max_connections=200
    profiles: ["debug", "dev"]
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - services_default



  pgadmin:
    image: dpage/pgadmin4
    profiles: ["debug"]
    ports:
      - "5050:5050"
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    env_file:
      - .env
    logging:
      driver: none
    networks:
      - services_default

  mongo_nef:
    image: mongo:4.4.10
    profiles: ["debug", "dev"]
    volumes:
      - app-mongo-db-data:/data/db
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
    networks:
      - services_default

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    profiles: ["debug"]
    restart: always
    ports:
      - 8081:8081
    env_file:
      - .env
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_USER}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_PASSWORD}"
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo_nef:27017/
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "${MONGO_EXPRESS_ENABLE_ADMIN}"
    networks:
      - services_default

  
  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    profiles: ["debug", "dev"]
    command: /start-reload.sh
    volumes:
      - ./backend/app:/app
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST}
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
        INSTALL_JUPYTER: ${INSTALL_JUPYTER-true}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - services_default


  reverse_proxy:
    build:
      context: nginx
      dockerfile: Dockerfile.nginx
    image: nginx-nef
    restart: unless-stopped
    env_file: .env
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "false"
      SERVICE_NAME: "webserver"
    hostname: ${NEF_HOST}
    ports:
      - "${NGINX_HTTP}:80"
      - "${NGINX_HTTPS}:443"
    volumes:
      - nginxdata:/var/log/nginx
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - backend
      - mongo_nef
      - db
    networks:
      - services_default
    command: sh -c '/self-signed-crt.sh && /dynamic_ports.sh'

networks:
    services_default:
      external: ${EXTERNAL_NET}


volumes:
  app-db-data:
  pgadmin-data:
  app-mongo-db-data:
  nginxdata: